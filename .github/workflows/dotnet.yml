name: Build Solution

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    
    strategy:
      matrix:
          os: [ubuntu-latest, windows-latest, macos-latest]
          node-version: [12.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.0.x'  # Replace with the correct version

    - name: Restore dependencies
      run: dotnet restore --no-cache

    - name: Build and Test
      run: |
        dotnet build --no-restore
        dotnet test --no-build /p:CollectCoverage=true /p:ExcludeByFile="**/*Migrations/*.cs" --logger trx > test_results.trx

    - name: Publish Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: test_results.trx

  update-badge:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Test Results
      uses: actions/download-artifact@v2
      with:
        name: test-results

    - name: Extract Coverage
      run: |
        COVERAGE=$(grep "Total Coverage" test_results.trx | awk '{print $3}')
        echo "Coverage: $COVERAGE"

    - name: Update Badge
      run: |
        BADGE_URL="https://img.shields.io/badge/Coverage-${{ env.COVERAGE }}%25-brightgreen.svg"
        echo "[![Coverage Status](${BADGE_URL})](https://your_coverage_report_url_here)" > README.md
        
        git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
        git config --global user.name "${{ secrets.GIT_USER_NAME }}"
        git add README.md
        git commit -m "Update coverage badge [skip ci]"
      
        BRANCH_NAME=$(basename ${{ github.ref }} | sed 's/refs\/heads\///')

        git branch -M $BRANCH_NAME
        git push origin $BRANCH_NAME

